{
  
    
        "post0": {
            "title": "How to configure a laptop's NVIDIA GPU for Deep Learning",
            "content": "Introduction . It is well known for anybody who has ever tried to train any Deep Learning model beyond a simple Multi Layer Perceptron on a few observations that using a GPU for training is kind of a must. While nowadays many different platforms and services offer GPUs for free (I&#39;m looking at you Kaggle and Google Colab) if you&#39;re anything like me, and you also happen to have a good NVIDIA Graphics Card in your computer, surely you&#39;ve felt like giving it a go by yourself. . And here is where complications start. Configuring a NVIDIA GPU to be found by your favourite Deep Learning framework it&#39;s way more complicated than it should. Specially if you are installing it on Windows, as it happens to me. Chances are that you have not purchased a high-end NVIDIA exclusively for doing Deep Learning, bur rather you bought the laptop as a gaming station (this is basically what happened to me) and thought of exploring the GPU capabilities in it. . I&#39;ve gone through the process a few times, and what follows it&#39;s my own personal guidelines to replicate the setup should I have to do a hard reset on my laptop (God forbids), . Let&#39;s Get to it . Basically we need to install a few things, and the bigger complexity comes from knowing what these are, and which version we should get. . First of all, we are going to download the latest driver for Our NVIDIA Card. In my case, it&#39;s a RTX 2060 operating on Windows 11. For this one you would want to have the latest one. For things we will be installing afterwwards that won&#39;t be the case, as we will have contraints due to for example, which version of CUDA is allowed for our card model. . Another thing you would need is the latest Microsoft Visual C++ development kit. . Install CUDA toolkit 11 at least, and certainly the latest one available. . We will also need cuDNN. Here we differ from the guidelines offered by Professor Heaton in the tutorial in the references section. Reason is, if we are willing to go with versions that are not precisely the latest ones for Tensorflow or other frameworks, then we can let conda take care of the installation of the rest of pieces. We will use conda to create a brand new environment containing a version of cudnn and cudatoolkit that our Graphics Card would tolerate, and finally a good combination of python version and tensorflow version. . In my case this happens to be: . conda create -n tensorflow-cuda cudnn=7.6 cudatoolkit=11.1 python=3.7 conda activate tensorflow-cuda conda install nb_conda pip install tensorflow==2.3.0 conda env update --file environment.yml python -m ipykernel install --user --name tensorflow-cuda --display-name &quot;Python (tensorflow-cuda)&quot; . I typically use environment.yml as a mean to install any additional library I may need and update the environment on the fly each time. Say I need or want to use scikitlearn and it wasn&#39;t installed, I just add it to the environment.yml file and update the environment. . Check Configuration . After this, we can quickly test whether our installation of Tensorflow is working appropiately. I will use the jupyter kernel running behind this post as it is easy and convenient for me. A simple matrix multiplication will do. I mean, that&#39;s why we use GPUs to begin with. . import tensorflow as tf print(tf.test.is_gpu_available()) print(tf.test.is_built_with_cuda()) . WARNING:tensorflow:From C: Users alvaroof AppData Local Temp ipykernel_14080 712885346.py:3: is_gpu_available (from tensorflow.python.framework.test_util) is deprecated and will be removed in a future version. Instructions for updating: Use `tf.config.list_physical_devices(&#39;GPU&#39;)` instead. True True . If I switch to the jupyter kernel without GPU enabled: . %%time import tensorflow as tf import warnings warnings.filterwarnings(&#39;ignore&#39;) tf.debugging.set_log_device_placement(True) a = tf.constant([1.22582], shape=[10000, 10000], name=&#39;a&#39;) b = tf.constant([1.1125], shape=[10000, 10000], name=&#39;b&#39;) c = tf.matmul(a, b) . Executing op Fill in device /job:localhost/replica:0/task:0/device:CPU:0 Executing op Fill in device /job:localhost/replica:0/task:0/device:CPU:0 Executing op MatMul in device /job:localhost/replica:0/task:0/device:CPU:0 Wall time: 6.45 s . And with GPU . %%time import tensorflow as tf import warnings warnings.filterwarnings(&#39;ignore&#39;) tf.debugging.set_log_device_placement(True) a = tf.constant([1.22582], shape=[10000, 10000], name=&#39;a&#39;) b = tf.constant([1.1125], shape=[10000, 10000], name=&#39;b&#39;) c = tf.matmul(a, b) . Executing op Fill in device /job:localhost/replica:0/task:0/device:GPU:0 Executing op Fill in device /job:localhost/replica:0/task:0/device:GPU:0 Executing op MatMul in device /job:localhost/replica:0/task:0/device:GPU:0 Wall time: 608 ms . As we can see, with GPU the matrix multiplication takes 10x less time to run :smiley:. . References . Tensorflow Documentation | Jeff Heaton&#39;s Video Tutorial | .",
            "url": "https://alvaroof.github.io/blog/gpu/tensorflow/torch/2022/09/12/using_cuda.html",
            "relUrl": "/gpu/tensorflow/torch/2022/09/12/using_cuda.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Why I made this blog",
            "content": "I&#39;ve been meaning to start and maintain some sort of blog for some time now, but had never found the will or time to do it. . That is, until now. See, when you try to do things out of obligation, or force youself in any other way to do them, most likely you&#39;re going to do them reluctantly and avoid them as much as possible. That&#39;s being my situation unil recentlyI , always on the lookout for how to start a blog from a technical perspective, like how to setup one, hosting platforms, etc, but never getting to actually write anything. I&#39;ve always wanted to have a blog because I saw it as something cool, something real Data Scientists have, but having overcome that imposter syndrome by now, and also realizing that I am more than the job I have, I find myself in just the position to start to write about things that interest me, and I mean this in a really broa way. . For now, What I have in mind is to take a few courses on several matters I am intered in (like Deep Learning or Physics/Math) and try to portray here what I found interesting on them. . My main intention and hope with this blog is just to spend some time writing, and if along the proccess I happen to improve my communication skills, and have a better grasp of whatever I talk about here, so be it. . I am not really an smart guy, just an average one who knows how to do ok :). May all this serve as a disclaimer for the poor quality you&#39;ll likely find ahead. .",
            "url": "https://alvaroof.github.io/blog/gpu/tensorflow/torch/2022/09/11/why_i_write.html",
            "relUrl": "/gpu/tensorflow/torch/2022/09/11/why_i_write.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "My Introduction",
            "content": "Hey there! . I am actually blogging, and this is my first message to the world. . x y . 0 42 | 10 | . 1 64 | 58 | . 2 68 | 49 | . 3 3 | 54 | . 4 88 | 63 | . df = pd.DataFrame.from_dict({&#39;x&#39;: np.random.randint(0,100,100), &#39;y&#39;: np.random.randint(0,100,100)}) df.head() . . x y . 0 58 | 41 | . 1 0 | 78 | . 2 33 | 11 | . 3 2 | 17 | . 4 84 | 56 | . df = pd.DataFrame.from_dict({&#39;x&#39;: np.random.randint(0,100,100), &#39;y&#39;: np.random.randint(0,100,100)}) df.head() . . x y . 0 10 | 15 | . 1 29 | 56 | . 2 78 | 23 | . 3 91 | 15 | . 4 64 | 2 | . df = pd.DataFrame.from_dict({&#39;x&#39;: np.random.randint(0,100,100), &#39;y&#39;: np.random.randint(0,100,100)}) df.head() . x y . 0 93 | 24 | . 1 54 | 61 | . 2 29 | 80 | . 3 92 | 40 | . 4 88 | 60 | . . . We can also post images to the blog. . . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . There was a &#39;Not Found&#39; error fetching URL: &#39;https://twitter.com/some-link&#39; . . fastpages builds upon the minima theme. If you want to customize the styling or layout of fastpages, you can find instructions in minima&#39;s README. It is a good idea to read the full contents of the README to understand the directory structure. Furthermore, it is a good idea to have a basic understanding of Jekyll before customizing your theme. For those new to Jekyll, the official docs are a good place to start. Concretely, you can override css in fastpages in _sass/minima/custom-styles.scss. NOTE that minima&#39;s &quot;skins&quot; feature is currently incompatible with fastpages&#39; css settings. . This adds a linked superscript 15 . 15. This is the actual footnote↩ . This adds a linked superscript 20 . 20. This is the actual footnote with a link as well!↩ . . Warning: There will be no second warning! . . Important: Pay attention! It&#8217;s important . Tip: This is my tip. will render this: . Note: Take note of this. will render this: . Note: A doc link to an example website: fast.ai should also work fine. will render in the docs: .",
            "url": "https://alvaroof.github.io/blog/test/jupyter/2022/09/06/introduction.html",
            "relUrl": "/test/jupyter/2022/09/06/introduction.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "My First Post",
            "content": "Hey there! . I am actually blogging, and this is my first message to the world. . !conda env list . # conda environments: # base C: Users alvaroof anaconda3 blog-environment * C: Users alvaroof anaconda3 envs blog-environment . x y . 0 82 | 42 | . 1 52 | 50 | . 2 15 | 47 | . 3 97 | 23 | . 4 51 | 67 | . df = pd.DataFrame.from_dict({&#39;x&#39;: np.random.randint(0,100,100), &#39;y&#39;: np.random.randint(0,100,100)}) df.head() . . x y . 0 30 | 99 | . 1 32 | 9 | . 2 22 | 69 | . 3 16 | 40 | . 4 38 | 8 | . df = pd.DataFrame.from_dict({&#39;x&#39;: np.random.randint(0,100,100), &#39;y&#39;: np.random.randint(0,100,100)}) df.head() . . x y . 0 10 | 15 | . 1 29 | 56 | . 2 78 | 23 | . 3 91 | 15 | . 4 64 | 2 | . df = pd.DataFrame.from_dict({&#39;x&#39;: np.random.randint(0,100,100), &#39;y&#39;: np.random.randint(0,100,100)}) df.head() . x y . 0 93 | 24 | . 1 54 | 61 | . 2 29 | 80 | . 3 92 | 40 | . 4 88 | 60 | . . . We can also post images to the blog. . . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . There was a &#39;Not Found&#39; error fetching URL: &#39;https://twitter.com/some-link&#39; . . fastpages builds upon the minima theme. If you want to customize the styling or layout of fastpages, you can find instructions in minima&#39;s README. It is a good idea to read the full contents of the README to understand the directory structure. Furthermore, it is a good idea to have a basic understanding of Jekyll before customizing your theme. For those new to Jekyll, the official docs are a good place to start. Concretely, you can override css in fastpages in _sass/minima/custom-styles.scss. NOTE that minima&#39;s &quot;skins&quot; feature is currently incompatible with fastpages&#39; css settings. . This adds a linked superscript 15 . 15. This is the actual footnote↩ . This adds a linked superscript 20 . 20. This is the actual footnote with a link as well!↩ . . Warning: There will be no second warning! . . Important: Pay attention! It&#8217;s important . Tip: This is my tip. will render this: . Note: Take note of this. will render this: . Note: A doc link to an example website: fast.ai should also work fine. will render in the docs: .",
            "url": "https://alvaroof.github.io/blog/fastpages/jupyter/2022/06/04/start.html",
            "relUrl": "/fastpages/jupyter/2022/06/04/start.html",
            "date": " • Jun 4, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . :+1: . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://alvaroof.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://alvaroof.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "If you wanna know more about me, connect with me on Linkedin. .",
          "url": "https://alvaroof.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Placeholder Page",
          "content": "If you wanna know more about me, connect with me on Linkedin. .",
          "url": "https://alvaroof.github.io/blog/placeholder/",
          "relUrl": "/placeholder/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://alvaroof.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}